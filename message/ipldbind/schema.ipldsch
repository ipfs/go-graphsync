type GraphSyncExtensions {String:nullable Any}
type GraphSyncRequestID bytes
type GraphSyncPriority int

type GraphSyncLinkAction enum {
   # Present means the linked block was present on this machine, and is included
   # in this message
   | Present             ("p")
   # DuplicateNotSent means the linked block was present on this machine, but I
   # am not sending it (most likely duplicate)
   # TODO: | DuplicateNotSent   ("d")
   # Missing means I did not have the linked block, so I skipped over this part
   # of the traversal
   | Missing             ("m")
   # DuplicateDAGSkipped means the DAG with this link points toward has already
   # been traversed entirely in the course of this request
   # so I am skipping over it entirely
   # TODO: | DuplicateDAGSkipped ("s")
} representation string

type GraphSyncMetadatum struct {
  link         Link
  action       GraphSyncLinkAction
} representation tuple

type GraphSyncMetadata [GraphSyncMetadatum]

type GraphSyncResponseStatusCode enum {
  # Informational Codes (request in progress)

  | RequestAcknowledged           ("10")
  | AdditionalPeers               ("11")
  | NotEnoughGas                  ("12")
  | OtherProtocol                 ("13")
  | PartialResponse               ("14")
  | RequestPaused                 ("15")

  # Success Response Codes (request terminated)

  | RequestCompletedFull          ("20")
  | RequestCompletedPartial       ("21")

  # Error Response Codes (request terminated)

  | RequestRejected               ("30")
  | RequestFailedBusy             ("31")
  | RequestFailedUnknown          ("32")
  | RequestFailedLegal            ("33")
  | RequestFailedContentNotFound  ("34")
  | RequestCancelled              ("35")
} representation int

type GraphSyncRequestType enum {
   # New means a new request
   | New     ("n")
   # Cancel means cancel the request referenced by request ID
   | Cancel  ("c")
   # Update means the extensions contain an update about this request
   | Update  ("u")
   # Restart means restart this request from the begging, respecting the any DoNotSendCids/DoNotSendBlocks contained
   # in the extensions -- essentially a cancel followed by a new
   # TODO: | Restart ("r")
} representation string

type GraphSyncRequest struct {
  id                GraphSyncRequestID   (rename "ID")   # unique id set on the requester side
  root     optional Link                 (rename "Root") # a CID for the root node in the query
  selector optional Any                  (rename "Sel")  # see https://github.com/ipld/specs/blob/master/selectors/selectors.md
  extensions        GraphSyncExtensions  (rename "Ext")  # side channel information
  priority          GraphSyncPriority    (rename "Pri")  # the priority (normalized). default to 1
  requestType       GraphSyncRequestType (rename "Typ")  # the request type
} representation map

type GraphSyncResponse struct {
  id          GraphSyncRequestID          (rename "ID")   # the request id we are responding to
  status      GraphSyncResponseStatusCode (rename "Stat") # a status code.
  metadata    GraphSyncMetadata           (rename "Meta") # metadata about response
  extensions  GraphSyncExtensions         (rename "Ext")  # side channel information
} representation map

type GraphSyncBlock struct {
  prefix  Bytes (rename "Pre") # CID prefix (cid version, multicodec and multihash prefix (type + length)
  data    Bytes (rename "Data")
} representation map

type GraphSyncMessage struct {
  requests  [GraphSyncRequest]  (rename "Reqs")
  responses [GraphSyncResponse] (rename "Rsps")
  blocks    [GraphSyncBlock]    (rename "Blks")
} representation map
